name: "Build FBX2glTF"
on:
  pull_request:
    branches:
    - master
  push:
    branches:
      - master
    tags:
      - "v*"
  workflow_dispatch:

concurrency:
  group: ci-${{github.actor}}-${{github.head_ref || github.run_number}}-${{github.ref}}-build
  cancel-in-progress: true

jobs:
  build-macos:
    runs-on: macos-13
    steps:
      - name: Checkout
        uses: actions/checkout@v3


      - name: Install conan
        run: |
          pip install --upgrade conan==1.58
        shell: bash

      - name: Setup conan profile
        run: |
          conan profile new default --detect
          conan profile show default
        shell: bash

      - name: Setup filter.lfs.required
        run: |
          git config --global filter.lfs.required false
        shell: bash

      - name: Setup filter.lfs.smudge
        run: |
          git config --global filter.lfs.smudge "git-lfs smudge --skip %f"
        shell: bash

      - name: Setup filter.lfs.process
        run: |
          git config --global filter.lfs.process "git-lfs filter-process --skip"
        shell: bash

      - name: Fetch sdk
        run: |
          curl -O -L "https://github.com/V-Sekai/FBXSDK-Darwin/archive/refs/tags/2020.2.zip"
        shell: bash

      - name: install 7z extract
        run: |
          7z x 2020.2.zip
        shell: bash

      - name: move
        run: |
          mkdir -p sdk
          mv ./FBXSDK-Darwin-2020.2/sdk .
        shell: bash

      - name: Decompress sdk
        run: |
          zstd -d -r --rm ./sdk || true
        shell: bash

      - name: Conan install
        run: |
          env CMAKE_OSX_ARCHITECTURES=x86_64 conan install . -i build -s build_type=Release --settings arch=x86_64 --build missing
        shell: bash

      - name: Conan build
        run: |
          env CMAKE_OSX_ARCHITECTURES=x86_64 conan build -bf build .
        shell: bash

      - name: Run FBX2glTF help
        run: |
          ./build/FBX2glTF --help
        shell: bash

      - name: Adhoc signature
        run: |
          codesign -s - --options=runtime build/FBX2glTF
        shell: bash

      - name: Prepare artifacts
        run: |
          export TARGET=FBX2glTF-macos-x86_64
          mkdir $TARGET
          cp sdk/Darwin/2020.2/License.rtf $TARGET/FBX-SDK-License.rtf
          cp LICENSE $TARGET/FBX2glTF-License.txt
          cp build/FBX2glTF $TARGET/FBX2glTF-macos-x86_64
          7z a -r $TARGET.zip $TARGET
        shell: bash

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: FBX2glTF-macos-x86_64.zip

      - name: FBX2glTF-macos-x86_64
        uses: actions/upload-artifact@v3
        with:
          name: FBX2glTF-macos-x86_64
          path: FBX2glTF-macos-x86_64/*
